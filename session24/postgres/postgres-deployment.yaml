apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  selector:
    matchLabels:
      app: postgres-pod
  template:
    metadata:
      labels:
        app: postgres-pod
    spec:
      initContainers:
        - name: init-sql
          image: busybox:1.36
          command: ["sh", "-c"]
          args:
            - |
              echo "CREATE DATABASE customers;" > /docker-entrypoint-initdb.d/init.sql
              echo "\c customers" >> /docker-entrypoint-initdb.d/init.sql  # Connect to the database
              echo "CREATE TABLE profiles (id SERIAL PRIMARY KEY, name TEXT);" >> /docker-entrypoint-initdb.d/init.sql
              echo "INSERT INTO profiles (name) VALUES ('Alireza');" >> /docker-entrypoint-initdb.d/init.sql
          volumeMounts:
            - name: postgres-init-sql
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - name: postgres
          image: postgres:15.3
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD_FILE
              value: /etc/secrets/postgres-password
          volumeMounts:
            - name: postgres-secret-volume
              mountPath: /etc/secrets
              readOnly: true
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-init-sql
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              cpu: 10m
              memory: 300Mi 
            limits:
              cpu: 40m
              memory: 500Mi
      volumes:
        - name: postgres-secret-volume
          secret:
            secretName: postgres-secret
            defaultMode: 0400
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: postgres-init-sql
          emptyDir: {}
